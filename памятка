#что я знаю о питоне

#встроенные функции
print("text")
bool("True") #True/False
str(123) #придает строковое значение (вернет "123")
len("slovo") #количество элементов в списке (вернет 5)
int("123") # как str только в числа (вернет 123 как число)
input() #вернет строку от пользователя
exec("print()") #выполняет код в строке 
chr(65) #вернет символ "А" (по цифрам возвращает буквы)

#операторы
+ - * / ^ #вычисления
<= >= < > != == #сравнение
and or not #логчические действия

#конструкции управляющие выполнению кода
if while for #служебные слова

#переменные
a = 3 
b = 1
c = 2
d = a > b and a > c 
a = b + c

thing = True #True сохранено в something
something = thing #чтение из thing и запись в something
s = "str"

# list
memory = [1, 2, 3, 4, 5]
el = memory[0] # обращение к элементу списка с индексом 0 (вернет 1)
memory[0] = 10 # ел это 1 а мемори 0 это 10 
memory[4] = 100 #запись в элемент списка с индексом 4 (мемори теперь [1, 2, 3, 4, 100])

#работа с одним элементом (один выводится)
print (memory[0])

#работа со всеми элементами (каждый элемент выводится)
# 1 способ
for memory_obj in memory:
    print(memory_obj)

# 2 способ
i = 0
while i < len(memory):
    memory_obj = memory[i]
    print (memory_obj)
    i = i + 1

#return 
def give_par(a): 
    return a #возвращает параметр a

def give_five():
    return 5
def inc(a):
    return a + 1

def dec(a):
    return a - 1

def give_sum(a, b): #to do переписать не использовать +
    print(a)
    print(b)
    i = 0
    c = a
    while i < b:
        i = inc(i) 
        c = inc(c)       
    return c

res = give_sum(2, 3) #res = 5
res = give_sum(20, 1) #res = 21

def give_product(a, b): # произведение a и b
    i = 0
    s = 0
    while i < b
        i = give_sum(i, 1)
        s = give_sum(a, s)
    return s   

result = give_product(5, 4)

def give_sub(a, b):
    print(a)
    print(b)
    i = 0
    c = a
    while i < b
        i = inc(i)
        c = dec(c)
    return c
def give_div(a, b):
    print(a)
    print(b)
    i = 1
    c = b
    while i < a: 
        i = inc(i)
        c = give_sum(c, b)
        if c > a:
            i = dec(i)
            return i
        if c == a:
            return i 


#if/elif (возвращают условие (+цикл))
e = 5
i = 6
1 пример
e = 5
if e < i
    i + 1 
    elif print(i)
print(e) #теперь e это 6 с помощью if
i = 10
e = 12
o = 20
while i < o
    i + 1
print (e) #так мы выведем 10 раз e






